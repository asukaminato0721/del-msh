name: PyO3_Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1.27.0
      with:
        manylinux: auto
        command: build
        args: --release --sdist -o dist -m del-msh-numpy/Cargo.toml
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-linux
        path: dist

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1.27.0
      with:
        command: build
        args: --release -o dist -m del-msh-numpy/Cargo.toml
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-windows
        path: dist

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install latest maturin
      run: pip install maturin
    - name: Build macOS universal2 wheel
      run: |
        maturin --version
        maturin build --release -o dist -m del-msh-numpy/Cargo.toml
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-macos
        path: dist

#    - uses: PyO3/maturin-action@v1
#      with:
#        command: build
#        args: --release -o dist -m del-msh-numpy/Cargo.toml

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: all_wheels
      - name: Flatten all wheels into dist/
        run: |
          mkdir dist
          find all_wheels -name '*.whl' -exec cp {} dist/ \;
          find all_wheels -name '*.tar.gz' -exec cp {} dist/ \;
      - name: Check wheels
        run: |
          pip install twine
          twine check dist/*
      - name: Upload to PyPI
        run: |
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#      - name: Upload to PyPI
#        run: |
#          python -m pip install --upgrade pip
#          pip install twine
#          twine upload all_wheels/**/*.whl all_wheels/**/*.tar.gz
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#
#      - name: Publish to PyPI
#        uses: messense/maturin-action@v1
#        env:
#          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
#        with:
#          command: upload
#          args: --skip-existing *