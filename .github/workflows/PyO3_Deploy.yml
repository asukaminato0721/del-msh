name: PyO3_Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release --sdist -o dist -m del-msh-pyo3/Cargo.toml
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-linux
        path: dist

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release -o dist -m del-msh-pyo3/Cargo.toml
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-windows
        path: dist

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release -o dist --target universal2-apple-darwin -m del-msh-pyo3/Cargo.toml
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-macos
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: all_wheels
      - name: Upload to PyPI
        run: |
          python -m pip install --upgrade pip
          pip install twine
          pip install pkginfo
          python -m pkginfo all_wheels/**/*.whl
          twine upload all_wheels/**/*.whl all_wheels/**/*.tar.gz
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

#      - name: Publish to PyPI
#        uses: messense/maturin-action@v1
#        env:
#          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
#        with:
#          command: upload
#          args: --skip-existing *